services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_LOCAL_VERSION}
    container_name: ${ES_LOCAL_CONTAINER_NAME}
    volumes:
      - dev-elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 127.0.0.1:${ES_LOCAL_PORT}:9200
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ES_LOCAL_PASSWORD}
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - xpack.license.self_generated.type=trial
      - xpack.ml.use_auto_machine_memory_percent=true
      - ES_JAVA_OPTS=-Xms${ES_LOCAL_HEAP_INIT} -Xmx${ES_LOCAL_HEAP_MAX}
      - cluster.routing.allocation.disk.watermark.low=${ES_LOCAL_DISK_SPACE_REQUIRED}
      - cluster.routing.allocation.disk.watermark.high=${ES_LOCAL_DISK_SPACE_REQUIRED}
      - cluster.routing.allocation.disk.watermark.flood_stage=${ES_LOCAL_DISK_SPACE_REQUIRED}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --output /dev/null --silent --head --fail -u elastic:${ES_LOCAL_PASSWORD} http://elasticsearch:${ES_LOCAL_PORT}",
        ]
      interval: 5s
      timeout: 5s
      retries: 10

  mongodb:
    container_name: mongodb
    image: mongodb/mongodb-atlas-local
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=${MONGODB_INITDB_ROOT_USERNAME}
      - MONGODB_INITDB_ROOT_PASSWORD=${MONGODB_INITDB_ROOT_PASSWORD}
      - RUNNER_LOG_FILE=/dev/stderr
    ports:
      - 27017:27017
    volumes:
      - dev-mongodb:/data/db 
      - dev-mongodb-config:/data/configdb
      - ./init:/docker-entrypoint-initdb.d

  azure-blob-connector:
    depends_on:
      elasticsearch:
        condition: service_healthy
    image: docker.elastic.co/integrations/elastic-connectors:${ES_LOCAL_VERSION}
    container_name: azure-blob-connector
    env_file:
      - ${ES_LOCAL_ENV_FILE}
    volumes:
      - ./elastic-connectors:/azconfig
    command: ["/app/bin/elastic-ingest", "-c", "/azconfig/azconfig.yml"]
    restart: unless-stopped
  s3-connector:
    depends_on:
      elasticsearch:
        condition: service_healthy
    image: docker.elastic.co/integrations/elastic-connectors:${ES_LOCAL_VERSION}
    container_name: s3-connector
    env_file:
      - ${ES_LOCAL_ENV_FILE}
    volumes:
      - ./elastic-connectors:/s3config
    command: ["/app/bin/elastic-ingest", "-c", "/s3config/s3config.yml"]
    restart: unless-stopped
volumes:
  dev-elasticsearch:
  dev-mongodb:
  dev-mongodb-config:

